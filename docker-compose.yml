version: '3.9'
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - finance

  redis-cache:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379"
    networks:
      - finance

  kafka-broker:
    container_name: kafka-broker
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9093:9093"
    depends_on:
        - zookeeper
    environment:
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-broker:9092,OUTSIDE://localhost:9093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_BROKER_ID: 1
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - finance

  finance-db:
    image: postgres:latest
    container_name: finance_global_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER:  ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - finance

  finance-module:
    container_name: global-finance-module
    build:
      context: ./services/accounting
      dockerfile: Dockerfile
    ports:
      - "8087:8080"
    depends_on:
      - finance-db
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    networks:
      - finance

networks:
  finance:
    driver: bridge